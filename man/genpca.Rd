% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpca.R
\name{genpca}
\alias{genpca}
\title{Generalized Principal Components Analysis}
\usage{
genpca(X, A = NULL, M = NULL, ncomp = min(dim(X)), preproc = center(),
  deflation = FALSE)
}
\arguments{
\item{A}{the column constraints. Can be a \code{vector}, symmetric \code{matrix}, or symmetric sparse matrix with \code{ncol(X)} rows and columns.}

\item{M}{the row constraints. Can be a \code{vector}, symmetric \code{matrix}, or symmetric sparse matrix with \code{nrow(X)} rows and columns.}
}
\description{
Compute a PCA in a inner-product space defined by row and coulmn constraint matrices.
}
\examples{

coords <- expand.grid(x=seq(1,100), y=seq(1,100))
img <- apply(coords, 1, function(x) {
  x1 <- 1 - pnorm(abs(x[1] - 50), sd=8)
  x2 <- 1 - pnorm(abs(x[2] - 50), sd=8)
  x1*x2
})

mat <- matrix(img, 100,100)
mlist <- replicate(50, as.vector(mat + rnorm(length(mat))*.8), simplify=FALSE)
X <- do.call(rbind, mlist)

## spatial smoother
S <- neighborweights:::spatial_smoother(coords, sigma=8, nnk=27)
gp1 <- genpca(X, A=S, ncomp=2)

Xs <- do.call(rbind, lapply(1:nrow(X), function(i) X[i,,drop=FALSE] \%*\% S))
gp2 <- genpca(as.matrix(Xs), ncomp=2, center=FALSE)

## use an adjacency matrix to weight items sharing an index.

X <- matrix(rnorm(50*100), 50, 100)
colind <- rep(1:10, 10)
S <- neighborweights:::spatial_adjacency(as.matrix(colind), dthresh=4, sigma=1, nnk=27, normalized=TRUE, include_diagonal=TRUE, weight_mode="heat")
diag(S) <- 1
S <- S/RSpectra::svds(S,k=1)$d
gp1 <- genpca(X, A=S, ncomp=2)
}
\references{
Abdi, H. (2007). Singular value decomposition (SVD) and generalized singular value decomposition. \emph{Encyclopedia of measurement and statistics}, 907-912.

Allen, G. I., Grosenick, L., & Taylor, J. (2014). A generalized least-square matrix decomposition. \emph{Journal of the American Statistical Association}, 109(505), 145-159.
}
